// Создайте объект berlin, укажите у него свойства: 
// name (название города, строка) со значением "Берлин",
// population (населенность города, число) со значением 3645000,
// foundingDate (дата основания, число) 1237,
// currentDate (текущий год, число) 2022,

// Аналогично создайте объект для Парижа (население 6млн, дата основания(до н.э.) -53 (отрицательное число))

// Далее создайте в каждом объекте свойство age и присвойте ему как значение, функцию, то есть это будет метод.

// Этот метод не будет принимать никаких аргументов, но будет возвращать возраст города. То есть функция, которая будет хранится в свойстве age будет обращаться к this объекта, вычислять а затем возвращать (return) результат вычисления для конкретного объекта (текущий год минус год основания).


// Выводите результат вызова метода для каждого объекта в консоль.
// console.log(berlin.age())
// console.log(paris.age())

//  let berlin = {
//      name: "Berlin",
//      population: 3645000,
//      foundingDate: 1237, 
//      currentDate: 2022,
//      age: function getAgeofCity(){
//                  return this.currentDate - this.foundingDate;
//      }
//  };

//  let paris = {
//      name: "Paris",
//      population: 6000000,
//      foundingDate: -53, 
//      currentDate: 2022,
//      age: function getAgeofCity() {
        
//          return (this.currentDate + (this.foundingDate));
//      }
//  }
//  console.log(berlin.age())
//  console.log(paris.age())


// Second level: Немного усложним первую задачу:


// Удалите из обоих объектов метод age. И вместо этого объявите ту же функцию снаружи объектов просто как function getAge(){…}
// затем присвойте каждому объекту эту функцию отдельно, таким образом:
// berlin.age = getAge; 

// Обратите внимание, что this всё ещё работает корректно в каждом конкретном методе объекта. Это происходит потому, что функция определяет свой контекст(this) в момент вызова, а вызывать мы их будем обращаясь к методу объекта. 


// Напишите ещё одну функцию(название придумайте сами) и добавьте в неё один параметр(аргумент функции):
// число - свой возраст


// Реализуйте тело функции так, чтобы она возвращала строку, которая будет сообщать что этот конкретный город старше меня и на сколько лет.
// Присвойте эту функцию как метод в оба объекта, придумайте ему название сами.


// Например мне 31 год, я вызываю метод у Парижа. 
// Результат вызова должен быть таким:
// Париж старше меня на 2044


// Если же я вызову этот метод у Берлина, то результат должен быть таким:
// Берлин старше меня на 1891

// *** дополнительная необязательная задача - реализовать вспомогательную функцию, чтобы использовать её внутри метода, 
// функция должна принимать число года возвращать правильное слово - "год" или "года" или "лет", решение этой функции можно взять из интернета, но в таком случае необходимо будет прокомментировать что и почему там происходит. 


// В таком случае результат итоговый будет следующим
// Париж старше меня на 2044 года
// Берлин старше меня на 1891 год

 let berlin = {
     name: "Berlin",
     population: 3645000,
     foundingDate: 1237, 
     currentDate: 2022,
 };

 let paris = {
     name: "Paris",
     population: 6000000,
     foundingDate: -53, 
     currentDate: 2022,
 }

 
 function getAge() {
return this.currentDate - this.foundingDate;
       }

  
  berlin.age = getAge;
  paris.age = getAge;


 console.log(berlin.age())
console.log(paris.age());

function getAgeDifference(myAge) {
    let difference = this.age() - myAge;
    return this.name + " is " + difference + " years older than me " ;
}

berlin.ageDifference = getAgeDifference;
  paris.ageDifference = getAgeDifference;
  console.log(berlin.ageDifference(10));
  console.log(paris.ageDifference(10));
